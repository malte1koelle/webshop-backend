package com.bbw.webshopbackend.controller;

import com.bbw.webshopbackend.model.Product;
import com.bbw.webshopbackend.model.ProductRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import java.sql.*;
import java.util.ArrayList;
import java.util.List;

@Controller // This means that this class is a Controller
@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)
public class ProductController {

    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private ProductRepository productRepository;

    @GetMapping(path="/products")
    public @ResponseBody
    Iterable<Product> getAllProducts() {
        // Create a variable for the connection string.
        String connectionUrl = "jdbc:mysql://localhost:3306/webshop?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC";
        List<Product> products = new ArrayList<>();
        try (Connection con = DriverManager.getConnection(connectionUrl, "root", "root"); Statement stmt = con.createStatement();) {
            String SQL = "SELECT * FROM products";
            ResultSet rs = stmt.executeQuery(SQL);
            // Iterate through the data in the result set and display it.
            while (rs.next()) {
                Product product = new Product();
                product.setId(rs.getInt("id"));
                product.setName(rs.getString("product_name"));
                product.setPrice(rs.getDouble("product_price"));
                product.setDescription(rs.getString("product_description"));
                products.add(product);
            }
        }
        // Handle any errors that may have occurred.
        catch (SQLException e) {
            e.printStackTrace();
        }
        return products;
    }
}
