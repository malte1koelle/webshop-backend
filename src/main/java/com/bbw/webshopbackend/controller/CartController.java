package com.bbw.webshopbackend.controller;

import com.bbw.webshopbackend.model.CartRepository;
import com.bbw.webshopbackend.model.Product;
import com.bbw.webshopbackend.service.Database;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.ResponseBody;

import java.sql.*;
import java.util.ArrayList;
import java.util.List;


@Controller // This means that this class is a Controller
public class CartController {

    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private CartRepository cartRepository;

    @PostMapping(path="/addToCart")
    public void addProductToCart(@RequestBody String productId){
        Database database = new Database();
        Statement stmt = database.getSqlConnection();
        try {
            String SQL = "INSERT INTO cart (productid) values ("+ productId+")";
            stmt.executeUpdate(SQL);
        }
        catch (SQLException ex) {
            ex.printStackTrace();
        }
    }

    @PostMapping(path="/deleteFromCart")
    public void deleteProductToCart(@RequestBody String productId){
        Database database = new Database();
        Statement stmt = database.getSqlConnection();
        try {
            String SQL = "DELETE FROM cart WHERE productid="+ productId;
            stmt.executeUpdate(SQL);
        }
        catch (SQLException ex) {
            ex.printStackTrace();
        }
    }

    @GetMapping(path="/cart")
    public @ResponseBody
    Iterable<String[]> getCart() {
        Database database = new Database();
        Statement stmt = database.getSqlConnection();
        List<String[]> products = new ArrayList<>();
        String SQL = "SELECT products.id, products.product_name, products.product_price, products.product_description, count(products.id)\n" +
                "FROM cart\n" +
                "INNER JOIN products ON cart.productid=products.id\n" +
                "GROUP BY products.id";
        ResultSet rs = null;
        try {
            rs = stmt.executeQuery(SQL);
            while (rs.next()) {
                String[] product = {
                        Integer.toString(rs.getInt("id")),
                        rs.getString("product_name"),
                        Double.toString(rs.getDouble("product_price")),
                        rs.getString("product_description"),
                        rs.getString("count(products.id)"),
                };
                products.add(product);
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return products;
    }
}